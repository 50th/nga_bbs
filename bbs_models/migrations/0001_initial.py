# Generated by Django 2.2.1 on 2019-05-27 09:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'forum',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('action', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('permission', models.ManyToManyField(to='bbs_models.Permission')),
            ],
            options={
                'db_table': 'rule',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=16, null=True)),
                ('id_card', models.CharField(max_length=18, null=True)),
                ('password', models.CharField(max_length=64)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.IntegerField(null=True)),
                ('registe_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(choices=[(0, '未激活'), (1, '正常'), (2, '警告'), (3, 'nuke')], default=0)),
                ('permissions', models.ManyToManyField(to='bbs_models.Permission')),
                ('roles', models.ManyToManyField(to='bbs_models.Rule')),
            ],
            options={
                'db_table': 'user_profile',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
                ('content', models.TextField()),
                ('summary', models.CharField(max_length=64)),
                ('image', models.ImageField(null=True, upload_to='')),
                ('open_date', models.DateTimeField(auto_now_add=True)),
                ('editor', models.ManyToManyField(related_name='editor', to='bbs_models.UserProfile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='open_user', to='bbs_models.UserProfile')),
            ],
            options={
                'db_table': 'topic',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_user', models.ManyToManyField(to='bbs_models.UserProfile')),
                ('topic', models.ManyToManyField(to='bbs_models.Topic')),
            ],
            options={
                'db_table': 'like',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bbs_models.UserProfile')),
                ('parent_comment', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='bbs_models.Comment')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bbs_models.Topic')),
            ],
            options={
                'db_table': 'comment',
            },
        ),
    ]
